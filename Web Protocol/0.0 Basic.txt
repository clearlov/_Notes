1 nibble = 4 bits
1 byte = 2 nibble = 8 bits
1 word = DataBus = 16(in-16bit-sys)    32(in-32bit-sys)   64(in-64bit-sys)

|~ Endianness ~|
/**
 * Endianness is depended on CPU. It determines the memory to store int.
 */
e.g. 0x11223344
LE(little endian): [0x7f..a0 | 44] [0x7f..a8 | 33] [0x7f..b0 | 22] [0x7f..b8 | 11]
BE(big endian): [0x7f..a0 | 11] [0x7f..a8 | 22] [0x7f..b0 | 33] [0x7f..b8 | 44]
|[
unsigned short sterilize = 0x0102; // [0000 0001 | 0000 0010] or [0000 0010 | 0000 0001] in 64bit OS
char * interpreter = reinterpret_cast<char *>(&i);      // [0000 0001 |] or [[0000 0010 |], 1 or 2
bool is_be =  1 == (int)(*interpreter);     // 1 or 2
]|
|+ Network Endianness +|
/**
 * Network Endianness is always BE. So we need to convert host endianness into BE
 * [ 00000000 | 00000000 | 00000000 | 00000000 ]
 */
hton?: convert unsigned ? from host endianness(LE or BE) to network endianness (BE)
htons: unsigned short   /    htonl: unsingned long
ntoh?: convert unsigned ? from BE to host endianness (LE or BE)
ntohs / ntohl